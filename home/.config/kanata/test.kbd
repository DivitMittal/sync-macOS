(defcfg
  danger-enable-cmd yes       ;; enable kanata to execute commands
  delegate-to-first-layer no ;; transparent keys(_) on layers will delegate to the first-layer instead of the defsrc
  process-unmapped-keys no    ;; Enable processing of keys that are not in defsrc.
  block-unmapped-keys no      ;; Disable all keys not mapped in defsrc.(process-unmapped-keys must be enabled)
  rapid-event-delay 5
)

;; the reduced ANSI 60% layout (39-key layout)
(defsrc
  tab    q    w    e    r    t         u    i    o    p   [     ]    ;; 12 keys
  caps   a    s    d    f    g         j    k    l    ;    '    ret  ;; 12 keys
  lsft   z    x    c    v    b         n    m    ,    .    /    rsft ;; 12 keys
)

;; Aliases for keys accessible only via shifting
(defalias
  til S-grv exc S-1 ats S-2 oct S-3 dol S-4 per S-5 car S-6 amp S-7 ast S-8 pao S-9 pac S-0 und S-min plu S-eql
  btb S-tab                                                                                   cuo S-[ cuc S-] pip S-\
                                                                        ano S-comm anc S-. que S-/
)

(defvar
  tap-timeout   100
  hold-timeout  200
  one-shot-timeout 300

  ;; shortened vars
  tt $tap-timeout
  ht $hold-timeout
  ost $one-shot-timeout
)

(defalias
  delf (fork bspc (layer-switch empty) (lsft rsft))
  retf (fork ret (layer-switch colemak-modded) (lsft rsft))
  slaf (fork / (unshift \) (lsft rsft))
  comf (fork comm @und (lsft rsft))
  dotf (fork . @que (lsft rsft))
)

#| first-layer
 Modded Colemak, i.e.,
 1. curl mod (mod dh)
 2. wide mod (shifting right hand keys to the right by one key)
 3. angle mod (placement of z in the middle)
|#
(deflayer colemak-modded
  tab      q    w    f    p    b        j    l    u    y     '     ;
  @delf    a    r    s    t    g        m    n    e    i     o     ret
  lsft     x    c    d    v    z      @slaf  k    h   @comf .      rsft
)

(deflayer empty
  _   _    _    _    _    _         _    _    _    _    _    _
  _   _    _    _    _    _         _    _    _    _    _    @retf
  _   _    _    _    _    _         _    _    _    _    _    _
)

